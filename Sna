#include <string>
#include <map>
#include <vector>
#include <iostream>

struct Spot {
    std::string spotId;
    double charge;
    bool availability;
};

// Floor-to-spots mapping
std::map<std::string, std::vector<Spot>> floorSpots;

// Function to create a parking spot
void CreateSpot() {
    uiCommon.TitleBar("Admin App > Floor Management > Create Parking Spot");
    
    std::string floorNumber;
    std::cout << "Enter the Floor Number to add a parking spot: ";
    std::cin >> floorNumber;

    // Check if the floor exists (assuming floors are pre-defined)
    if (floorSpots.find(floorNumber) == floorSpots.end()) {
        std::cout << "Floor number not found! Please create the floor first." << std::endl;
        uiCommon.PressAnyKey(true);
        return;
    }

    // Input details for the parking spot
    Spot newSpot;
    std::cout << "Enter Spot ID: ";
    std::cin >> newSpot.spotId;

    std::cout << "Enter Spot Charge: ";
    std::cin >> newSpot.charge;

    int availabilityInput;
    std::cout << "Is the Spot Available? (1 for Yes, 0 for No): ";
    std::cin >> availabilityInput;
    newSpot.availability = (availabilityInput == 1);

    // Add the spot to the floor
    floorSpots[floorNumber].push_back(newSpot);

    std::cout << "Parking spot created successfully!" << std::endl;
    uiCommon.PressAnyKey(true);
}
